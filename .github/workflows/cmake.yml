name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install spdlog
      run: |
         git clone https://github.com/gabime/spdlog.git
         cd spdlog && mkdir build && cd build
         cmake .. -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_INSTALL_DIR=/usr/local/ && cmake --build . && sudo make install

    - name: Cache OpenCV
      id: opencv-cache
      uses: actions/cache@v3
      with:
        path: ./opencv/build
        key: ${{ runner.os }}-opencv-cache

    - if: ${{ steps.opencv-cache.output.cache-hit != 'true' }}
      name: Build OpenCV
      run: |
        git clone https://github.com/opencv/opencv.git --depth 1
        git clone https://github.com/opencv/opencv_contrib.git --depth 1
        cmake -S opencv -B opencv/build -D OPENCV_EXTRA_MODULES_PATH=opencv_contrib/modules -D WITH_OPENMP=on -D WITH_TBB=on -D WITH_IPP=on -D CMAKE_BUILD_TYPE=DEBUG -D WITH_CSTRIPES=on -D WITH_OPENGL=on -D BUILD_EXAMPLES=OFF -D BUILD_TESTS=OFF -D BUILD_DOCS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_OPENCV_PYTHON3=OFF -D WITH_FFMPEG=ON -D WITH_QT=OFF -D WITH_GTK=ON
        make -j10 -C opencv/build

    - if: ${{ steps.opencv-cache.output.cache-hit == 'true' }}
      name: Install OpenCV
      run: sudo make -C ./opencv/build install && sudo ldconfig

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=DEBUG -S${{github.workspace}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config DEBUG

    - name: Test (CMAKE)
      working-directory: ${{github.workspace}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C DEBUG --output-on-failure
