name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - run : sudo apt install ninja-build

    - name: Cache OpenCV
      id: opencv-cache
      uses: actions/cache@v3
      with:
        path: |
          ./opencv
          ./opencv_contrib
        key: ${{ runner.os }}-opencv-cache

    - name: Cache spdlog
      id: spdlog-cache
      uses: actions/cache@v3
      with:
        path: ./spdlog
        key: ${{ runner.os }}-spdlog-cache

    - if: ${{ steps.spdlog-cache.outputs.cache-hit != 'true' }}
      name: Build spdlog
      run: |
         git clone https://github.com/gabime/spdlog.git
         cd spdlog && mkdir build && cd build
         cmake .. -GNinja -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_INSTALL_DIR=/usr/local/ && cmake --build .
  
    - name: Install spdlog
      run: sudo make -C ./spdlog/build install

    - if: ${{ steps.opencv-cache.outputs.cache-hit != 'true' }}
      name: Build OpenCV
      run: |
        wget -O opencv.zip https://github.com/opencv/opencv/archive/4.x.zip
        wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.x.zip
        unzip opencv.zip
        mv opencv-4.x opencv
        unzip opencv_contrib.zip
        mv opencv_contrib-4.x opencv_contrib
        cmake -GNinja -S opencv -B opencv/build -D OPENCV_EXTRA_MODULES_PATH=opencv_contrib/modules -D WITH_OPENMP=on -D WITH_TBB=on -D WITH_IPP=on -D CMAKE_BUILD_TYPE=DEBUG -D WITH_CSTRIPES=on -D WITH_OPENGL=on -D BUILD_EXAMPLES=OFF -D BUILD_TESTS=OFF -D BUILD_DOCS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_OPENCV_PYTHON3=OFF -D WITH_FFMPEG=ON -D WITH_QT=OFF -D WITH_GTK=ON
        ninja -C opencv/build

    - name: Install OpenCV
      run: sudo ninja -C opencv/build install && sudo ldconfig

    - name: Configure CMake
      run: cmake -GNinja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=DEBUG -S${{github.workspace}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config DEBUG

    - name: Test (CMAKE)
      working-directory: ${{github.workspace}}
      run: build/bin/gesture_controller__test
